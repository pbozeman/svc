#!/bin/sh

DEV_ARG="$1"
BAUD_ARG="$2"

BAUD=${BAUD_ARG:-115200}

# someday this could get fancy and iterate over the devices matching
# the right pattern and then use something like udevadm info -n <dev>
# to find one with the right FTDI chip on the other side, but for now,
# this is easy:
DEVS="${DEV_ARG:-/dev/ttyUSB1 /dev/cu.usbserial-21101}"

for DEV in $DEVS; do
  if [ -e "$DEV" ]; then
    echo "Found device: $DEV"

    # Set baud with stty since this works on both darwin and linux
    # (which take different socat flags for the same effect.)
    # Also disable HUPCL (Hang Up on CLose). When enabled, there
    # is duplicate output.
    stty -F $DEV $BAUD raw -hupcl -isig -icanon -iexten -echo

    # If interactive, send stdin to uart. If output is a pipe, use
    # unidirectional mode.
    #
    # This might be overkill, but I don't want to test the interaction of
    # the STDIO settings on the terminal output when running with pipelined
    # reporting right now.
    #
    # TODO: see above. test this and see if the special case can be removed.
    #
    # I want ctrl-c to work to make it easy to quit without having to use
    # escape characters, so don't use raw on the stdio side.
    if [ -t 1 ]; then
      socat STDIO,icanon=0,echo=0,isig=1 "file:$DEV"
    else
      socat -u "file:$DEV"
    fi
    break
  fi
done
